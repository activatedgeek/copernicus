---
import { render } from "astro:content";
import { AiOutlineTags } from "react-icons/ai";
import { LuCalendarRange } from "react-icons/lu";
import { PiTimerBold } from "react-icons/pi";

import Html from "@components/Html.astro";
import Date from "@components/Date.astro";
import Area from "@components/Area.astro";
import Giscus from "@components/Giscus.astro";

import "@styles/katex.css";

const { page } = Astro.props;
const { data: frontmatter } = page;
const { Content, remarkPluginFrontmatter: remarkFrontmatter } =
  await render(page);

const { title, description, date, updated, area, comments, hideMetadata } =
  frontmatter;
const { readMins } = remarkFrontmatter;

const readMinsToText = (value) => {
  if (value < 1) {
    return "<1 min";
  }
  if (value == 1) {
    return "1 min";
  }
  return `${value} mins`;
};
---

<style>
  section {
    padding-bottom: calc(0.5 * var(--pico-spacing));
    margin-bottom: 0;

    > h1 {
      margin-bottom: calc(0.25 * var(--pico-typography-spacing-vertical));
    }

    > p {
      color: var(--pico-muted-color);
      font-size: calc(var(--pico-font-size) * 0.8);
      margin-bottom: calc(0.25 * var(--pico-typography-spacing-vertical));
    }

    > div {
      display: flex;
      vertical-align: middle;
      align-items: center;
      color: var(--pico-muted-color);

      > div {
        display: inline-flex;
        vertical-align: middle;
        align-items: center;
        margin-right: calc(0.7 * var(--pico-spacing));

        > svg {
          margin-right: calc(0.25 * var(--pico-spacing));
        }

        > span[class="info-text"] {
          display: inline-block;
          border: solid var(--pico-muted-border-color) var(--pico-border-width);
          border-radius: calc(1.5 * var(--pico-border-radius));
          padding: calc(0.1 * var(--pico-spacing))
            calc(0.4 * var(--pico-spacing));
          background-color: #f8fafc;
          border-color: #64748b;
          font-size: calc(var(--pico-font-size) * 0.6);
        }

        > span[class="area"] {
          font-size: calc(var(--pico-font-size) * 0.6);
        }
      }
    }
  }

  main > hr {
    margin: var(--pico-spacing) 0;
    width: 100vw;
    position: relative;
    left: calc(-50vw + 50%);
  }
</style>

<Html frontmatter={frontmatter}>
  <link
    rel="alternate"
    type="application/rss+xml"
    href={new URL("kb/rss.xml", Astro.site)}
    slot="head"
  />
  <main data-pagefind-body>
    <section style="text-align: center;">
      <h1 style={{ fontSize: "calc(1.2 * var(--pico-font-size))" }}>{title}</h1>
      <p style={{ fontSize: "calc(0.8 * var(--pico-font-size))" }}>
        {description}
      </p>
      <div style={hideMetadata ? "display: none;" : "display: inline-block;"}>
        {
          updated || date ? (
            <div>
              <LuCalendarRange className="icon" />
              <span class="info-text">
                <Date date={updated || date} />
              </span>
            </div>
          ) : null
        }
        <div>
          <PiTimerBold className="icon" />
          <span class="info-text">{readMinsToText(readMins)}</span>
        </div>
        <div>
          <AiOutlineTags className="icon" />
          <span class="area"><Area {area} /></span>
        </div>
      </div>
    </section>
    <hr />
    <Content />
    <slot />
    {
      comments ? (
        <section>
          <Giscus />
        </section>
      ) : null
    }
    <hr />
  </main>
</Html>
